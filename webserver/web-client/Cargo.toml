[package]
name = "web-client"
version = "0.1.0"
authors = ["Rob Sherwood <rob.sherwood@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
# alphabetical order please
common = { path = "../common/"}
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }
js-sys = "0.3.46"
plotters = "0.3.0"
plotters-canvas = "0.3.0"
serde_json = "1.0.96"
sorted-vec = "0.8.2"
wasm-bindgen = "0.2.63"
wasm-bindgen-futures = "0.4.36"
# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"


# separate out web-sys deps as they are so complicated
[dependencies.web-sys]
version = "0.3.46"
features = [
    'BinaryType',
    'Blob',
    'CanvasRenderingContext2d',
    'console',
    'Document',
    'Element',
    'ErrorEvent',
    'FileReader',
    'Geolocation',
    'Headers',
    'HtmlCanvasElement',
    'HtmlElement',
    'Location',
    'MessageEvent',
    'Node',
    'Performance',
    'ProgressEvent',
    'Request',
    'RequestInit',
    'RequestMode',
    'Response',
    'Window',
    'WebSocket',
]
