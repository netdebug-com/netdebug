[package]
name = "libconntrack"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]

bytes = "1.5.0"
byteorder = "1.5.0"
common = { path = "../common" }
common-wasm = { path = "../common/wasm" }             # TODO move this dir to the top level?
chrono = { version = "0.4.26", features = ["serde"] }
derive-getters = { workspace = true }
# use our own private upstream until they land our qtype=65/https patch
dns-parser = { git = "https://github.com/netdebug-com/dns-parser", branch = "pr47" }
# use our own private upstream until they land our tcp_header patch
etherparse = { git = "https://github.com/robs-zeynet/etherparse", branch = "tcp_header" }
futures = "0.3.28"
futures-util = "0.3.28"
indexmap = { workspace = true, features = ["serde"] }
itertools = "0.12.0"
libc = "0.2.146"
libconntrack-wasm = { path = "../libconntrack-wasm" }
linked-hash-map = { workspace = true }
log = "0.4.19"
mac_address = { workspace = true }
mac_oui = { version = "0.4.8", features = ["with-db"] }
netstat2 = "0.9.1"
net-route = { git = "https://github.com/gregor-netdebug/net-route", branch = "fix-ipv6" } # for getting default route
# PublicSufficeList - but statically includes official list from https://publicsuffix.org/
psl = "2.1.4"
rand = "0.8.5"
serde = "1.0.188"
serde_with = { version = "3.3.0", features = ["chrono_0_4"] }
serde_json = "1.0.104"
thiserror = "*"
tokio = { version = "1.29.1", features = ["full"] }
tokio-tungstenite = { version = "0.20.1", features = ["connect", "native-tls"] }
url = "2.4.1"

[dev-dependencies]
axum = { workspace = true, features = ["ws"] }
approx = { workspace = true }
tokio-stream = "0.1"
tokio = { version = "1.29.1", features = ["test-util"] }
tokio-test = "0.4.3"

[target.'cfg(unix)'.dependencies]
# this gets the capture-stream feature
pcap = { workspace = true, features = ["capture-stream"] }
libproc = "0.14.2"

[target.'cfg(windows)'.dependencies]
# this does not
pcap = { workspace = true, features = [] }
