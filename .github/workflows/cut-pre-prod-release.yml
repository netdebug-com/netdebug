name: GitHub Rust On Push dev build
run-name: ${{ github.actor }} GitHub On Push pre-prod build 🚀
on:
  push:
    # 'main' is the dev branch,
    # 'build-test' is for testing the build (rarely)
    branches: ["main", "build-test"]
jobs:
  cut-release:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - name: Build and Test
        uses: ./.github/actions/common-build
        with:
          cargo_build_flags: "--release"
          wasm_pack_build_flags: "--release"
      - name: Generate Version
        # looks like "2023-12-01"
        run: echo VERSION=pre-prod-latest-ubuntu-${{github.sha}}-`date --iso-8601` >> $GITHUB_ENV
      - name: make tarball
        # TODO: add artifacts from the electron build
        # the --transform puts all of the files in the $VERSION subdir
        run: |
          tar czf $VERSION.tgz \
          --transform "s/^\./$VERSION/" \
          ./target/release/netdebug-desktop \
          ./target/release/webserver \
          ./target/release/router-graph \
          ./scripts \
          ./webserver/web-client/pkg/ \
          ./frontend/console/dist \
          ./webserver/html
      # IF we get this far, automatically cut a release  with tag 'pre-prod-latest'
      # more Documentation at https://github.com/marketplace/actions/automatic-releases
      - name: Cut pre-prod linux release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "pre-prod-latest"
          title: "Development Build"
          # NOTE: this is just for Linux - need to figure out how to work for Mac/Windows
          # Stupid express doesn't expand $VARIABLES... just glob it and walk away...
          files: |
            *.tgz
